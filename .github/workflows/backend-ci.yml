name: backend-ci

on:
  pull_request:
    branches:
      - '**'

jobs:
  build-test:
    runs-on: ubuntu-latest

    # ← Postgres 서비스 추가
    services:
      postgres:
        image: postgres:15                 # 사용할 Postgres 버전
        ports:
          - 5432:5432                      # 호스트:컨테이너 포트 매핑 (선택)
        env:
          POSTGRES_DB: testdb              # application-test.yml 과 일치시킬 DB 이름
          POSTGRES_USER: user              # 어플리케이션 테스트 크리덴셜
          POSTGRES_PASSWORD: pass
        options: >-
          --health-cmd="pg_isready -U user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5               # 헬스체크 통과 후에 테스트가 시작됨

    steps:
      - uses: actions/checkout@v4

      - name: Grant execute permission to gradlew
        run: chmod +x backend/gradlew

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      # (선택) Gradle 캐시 설정
      - name: Gradle 캐시
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}

      - name: Gradle 테스트 (test 프로파일)
        working-directory: backend
        run: ./gradlew --no-daemon test -Dspring.profiles.active=test

  docker-build:
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - uses: actions/checkout@v4

      - name: Grant execute permission to gradlew
        run: chmod +x backend/gradlew

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Build JAR
        working-directory: backend
        run: ./gradlew --no-daemon bootJar

      - name: Check JAR file
        working-directory: backend
        run: ls -al build/libs

      - name: Docker build
        working-directory: backend
        run: docker build -t campintel-backend:ci .